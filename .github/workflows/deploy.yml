name: Deploy to GCP Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  RAILS_SERVICE: desafio-impulso-rails
  SIDEKIQ_SERVICE: desafio-impulso-sidekiq

jobs:
  build:
    name: üî® Build Images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

    outputs:
      rails-image: ${{ steps.build-info.outputs.rails-image }}
      sidekiq-image: ${{ steps.build-info.outputs.sidekiq-image }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Configure Docker for GCP
      run: gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build and Push Rails Image
      run: |
        RAILS_IMAGE="us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/desafio-impulso-rails:${{ github.sha }}"
        echo "Building Rails image: $RAILS_IMAGE"
        docker build -t $RAILS_IMAGE .
        docker push $RAILS_IMAGE

    - name: Build and Push Sidekiq Image
      run: |
        SIDEKIQ_IMAGE="us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/desafio-impulso-sidekiq:${{ github.sha }}"
        echo "Building Sidekiq image: $SIDEKIQ_IMAGE"
        docker build -f Dockerfile.sidekiq -t $SIDEKIQ_IMAGE .
        docker push $SIDEKIQ_IMAGE

    - name: Set Build Info
      id: build-info
      run: |
        RAILS_IMAGE="us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/desafio-impulso-rails:${{ github.sha }}"
        SIDEKIQ_IMAGE="us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/desafio-impulso-sidekiq:${{ github.sha }}"

        echo "rails-image=$RAILS_IMAGE" >> $GITHUB_OUTPUT
        echo "sidekiq-image=$SIDEKIQ_IMAGE" >> $GITHUB_OUTPUT

        echo "üî® Build completed:"
        echo "  Rails: $RAILS_IMAGE"
        echo "  Sidekiq: $SIDEKIQ_IMAGE"

  deploy:
    name: üöÄ Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Get Secrets from Secret Manager
      run: |
        DATABASE_URL=$(gcloud secrets versions access latest --secret=database-url)
        SECRET_KEY_BASE=$(gcloud secrets versions access latest --secret=rails-master-key)
        REDIS_URL=$(gcloud secrets versions access latest --secret=redis-url)

        echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
        echo "SECRET_KEY_BASE=$SECRET_KEY_BASE" >> $GITHUB_ENV
        echo "REDIS_URL=$REDIS_URL" >> $GITHUB_ENV

    - name: Run Database Migrations
      run: |
        RAILS_IMAGE="us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/desafio-impulso-rails:${{ github.sha }}"
        echo "Rails image: $RAILS_IMAGE"
        echo "Build output was: ${{ needs.build.outputs.rails-image }}"

        gcloud run jobs delete rails-migrate-job --region=$REGION --quiet || true

        gcloud run jobs create rails-migrate-job \
          --image="$RAILS_IMAGE" \
          --region=$REGION \
          --set-env-vars="RAILS_ENV=production,DATABASE_URL=$DATABASE_URL,SECRET_KEY_BASE=$SECRET_KEY_BASE" \
          --command="bundle,exec,rails,db:migrate"

        gcloud run jobs execute rails-migrate-job --region=$REGION --wait

    - name: Deploy Rails App to Cloud Run
      run: |
        RAILS_IMAGE="us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/desafio-impulso-rails:${{ github.sha }}"
        echo "Deploying Rails image: $RAILS_IMAGE"
        echo "Build output was: ${{ needs.build.outputs.rails-image }}"

        gcloud run deploy $RAILS_SERVICE \
          --image="$RAILS_IMAGE" \
          --region=$REGION \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars="RAILS_ENV=production,RAILS_SERVE_STATIC_FILES=true,RAILS_LOG_TO_STDOUT=true,DATABASE_URL=$DATABASE_URL,SECRET_KEY_BASE=$SECRET_KEY_BASE" \
          --memory=1Gi \
          --cpu=1 \
          --min-instances=0 \
          --max-instances=10 \
          --port=8080

    - name: Deploy Sidekiq Worker to Cloud Run
      run: |
        SIDEKIQ_IMAGE="us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/desafio-impulso-sidekiq:${{ github.sha }}"
        echo "Deploying Sidekiq image: $SIDEKIQ_IMAGE"

        gcloud run deploy $SIDEKIQ_SERVICE \
          --image="$SIDEKIQ_IMAGE" \
          --region=$REGION \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars="RAILS_ENV=production,DATABASE_URL=$DATABASE_URL,SECRET_KEY_BASE=$SECRET_KEY_BASE,REDIS_URL=$REDIS_URL" \
          --vpc-connector=redis-connector \
          --memory=512Mi \
          --cpu=1 \
          --min-instances=0 \
          --max-instances=3 \
          --port=8080

    - name: Deployment Summary
      run: |
        RAILS_URL=$(gcloud run services describe $RAILS_SERVICE --region=$REGION --format='value(status.url)')
        SIDEKIQ_URL=$(gcloud run services describe $SIDEKIQ_SERVICE --region=$REGION --format='value(status.url)')
        echo "üéâ Cloud Run deployment completed!"
        echo "üìç Rails App URL: $RAILS_URL"
        echo "‚ö° Sidekiq Worker URL: $SIDEKIQ_URL"
        echo "üéõÔ∏è Sidekiq Web UI: $RAILS_URL/sidekiq"
        echo "üóÑÔ∏è Database: Cloud SQL PostgreSQL"
        echo "üî¥ Redis: Memorystore"
        echo "üí∞ Cost: Pay-per-use (both scale to 0)"
        echo ""
        echo "‚úÖ Rails app and Sidekiq worker deployed separately"
        echo "üì¶ Both Docker images built and pushed successfully"