name: Deploy to GCP Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  RAILS_SERVICE: desafio-impulso-rails
  SIDEKIQ_SERVICE: desafio-impulso-sidekiq

jobs:
  build:
    name: üî® Build Images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    outputs:
      rails-image: ${{ steps.build-info.outputs.rails-image }}
      sidekiq-image: ${{ steps.build-info.outputs.sidekiq-image }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Configure Docker for GCP
      run: gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build and Push Rails Image
      run: |
        docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$RAILS_SERVICE:$GITHUB_SHA .
        docker push $REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$RAILS_SERVICE:$GITHUB_SHA

    - name: Build and Push Sidekiq Image
      run: |
        docker build -f Dockerfile.sidekiq -t $REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$SIDEKIQ_SERVICE:$GITHUB_SHA .
        docker push $REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$SIDEKIQ_SERVICE:$GITHUB_SHA

    - name: Set Build Info
      id: build-info
      run: |
        echo "rails-image=$REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$RAILS_SERVICE:$GITHUB_SHA" >> $GITHUB_OUTPUT
        echo "sidekiq-image=$REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$SIDEKIQ_SERVICE:$GITHUB_SHA" >> $GITHUB_OUTPUT

  deploy:
    name: üöÄ Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Get Secrets from Secret Manager
      run: |
        DATABASE_URL=$(gcloud secrets versions access latest --secret=database-url)
        SECRET_KEY_BASE=$(gcloud secrets versions access latest --secret=rails-master-key)
        REDIS_URL=$(gcloud secrets versions access latest --secret=redis-url)

        echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
        echo "SECRET_KEY_BASE=$SECRET_KEY_BASE" >> $GITHUB_ENV
        echo "REDIS_URL=$REDIS_URL" >> $GITHUB_ENV

    - name: Run Database Migrations
      run: |
        gcloud run jobs create rails-migrate-job \
          --image=${{ needs.build.outputs.rails-image }} \
          --region=$REGION \
          --set-env-vars="RAILS_ENV=production,DATABASE_URL=$DATABASE_URL,SECRET_KEY_BASE=$SECRET_KEY_BASE" \
          --vpc-connector=projects/$PROJECT_ID/locations/$REGION/connectors/redis-connector \
          --command="bundle,exec,rails,db:migrate" \
          --replace || true

        gcloud run jobs execute rails-migrate-job --region=$REGION --wait

    - name: Deploy Rails App to Cloud Run
      run: |
        gcloud run deploy $RAILS_SERVICE \
          --image=${{ needs.build.outputs.rails-image }} \
          --region=$REGION \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars="RAILS_ENV=production,RAILS_SERVE_STATIC_FILES=true,RAILS_LOG_TO_STDOUT=true" \
          --set-env-vars="DATABASE_URL=$DATABASE_URL,SECRET_KEY_BASE=$SECRET_KEY_BASE,REDIS_URL=$REDIS_URL" \
          --vpc-connector=projects/$PROJECT_ID/locations/$REGION/connectors/redis-connector \
          --memory=1Gi \
          --cpu=1 \
          --min-instances=0 \
          --max-instances=10 \
          --port=8080

    - name: Deploy Sidekiq Worker to Cloud Run
      run: |
        gcloud run deploy $SIDEKIQ_SERVICE \
          --image=${{ needs.build.outputs.sidekiq-image }} \
          --region=$REGION \
          --platform=managed \
          --no-allow-unauthenticated \
          --set-env-vars="RAILS_ENV=production,RAILS_LOG_TO_STDOUT=true" \
          --set-env-vars="DATABASE_URL=$DATABASE_URL,SECRET_KEY_BASE=$SECRET_KEY_BASE,REDIS_URL=$REDIS_URL" \
          --vpc-connector=projects/$PROJECT_ID/locations/$REGION/connectors/redis-connector \
          --memory=512Mi \
          --cpu=1 \
          --min-instances=1 \
          --max-instances=5 \
          --port=8080

    - name: Deployment Summary
      run: |
        RAILS_URL=$(gcloud run services describe $RAILS_SERVICE --region=$REGION --format='value(status.url)')
        echo "üéâ Cloud Run deployment completed!"
        echo "üìç Rails App URL: $RAILS_URL"
        echo "‚ö° Sidekiq Worker: $SIDEKIQ_SERVICE (internal)"
        echo "üóÑÔ∏è Database: Cloud SQL PostgreSQL"
        echo "üî¥ Redis: Memorystore via VPC Connector"
        echo "üí∞ Cost: Pay-per-use (Rails scales to 0)"