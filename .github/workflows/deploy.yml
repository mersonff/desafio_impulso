name: Deploy to GCP App Engine

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central

jobs:
  deploy:
    name: ðŸš€ Deploy to App Engine
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Run Database Migrations
      run: |
        gcloud run jobs create migrate-job-$GITHUB_SHA \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/images/desafio-impulso:latest \
          --region us-central1 \
          --set-env-vars RAILS_ENV=production \
          --set-secrets DATABASE_URL=database-url:latest,SECRET_KEY_BASE=rails-master-key:latest \
          --args bundle,exec,rails,db:migrate \
          --max-retries 1 \
          --cpu 1 \
          --memory 512Mi \
          --task-timeout 600 || true

        gcloud run jobs execute migrate-job-$GITHUB_SHA --region us-central1 --wait

    - name: Deploy to App Engine
      run: |
        export DATABASE_URL=$(gcloud secrets versions access latest --secret=database-url)
        export SECRET_KEY_BASE=$(gcloud secrets versions access latest --secret=rails-master-key)
        export REDIS_URL=$(gcloud secrets versions access latest --secret=redis-url)

        gcloud app deploy --quiet --promote \
          --set-env-vars DATABASE_URL="$DATABASE_URL",SECRET_KEY_BASE="$SECRET_KEY_BASE",REDIS_URL="$REDIS_URL"

    - name: Clean up old migration jobs
      run: |
        # Remove migration jobs older than current
        gcloud run jobs list --region=$REGION --format="value(name)" | grep "migrate-job-" | grep -v "migrate-job-$GITHUB_SHA" | head -5 | while read job; do
          gcloud run jobs delete $job --region=$REGION --quiet || true
        done